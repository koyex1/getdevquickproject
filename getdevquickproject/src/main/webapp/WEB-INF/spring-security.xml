<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/security
        https://www.springframework.org/schema/security/spring-security.xsd">
	
	<!-- error: add context schema above -->
	<context:component-scan base-package="net.olu.backend"/>
	
	<http>
		<intercept-url pattern="/**" access="permitAll" />
		<intercept-url pattern="managebooks/**" access="hasAutority('USER')" />
		<form-login login-page="/login"/>
		<logout />
	</http>
	
	<authentication-manager>
<authentication-provider>
    <!--
    <user-service>
    <user name="olu" password="123" authorities="ROLE_USER, ROLE_ADMIN" />
    </user-service>
    -->
    
    <!-- enabled and role are preprogrammed in spring security -->
    <!-- so you should construct a database with one  -->
       <jdbc-user-service data-source-ref="dataSource"
       users-by-username-query="select email, password, enabled from user where email= ? "
       authorities-by-username-query="select email, password, role from user where email =?"
       />
    
</authentication-provider>
</authentication-manager>


</beans:beans>